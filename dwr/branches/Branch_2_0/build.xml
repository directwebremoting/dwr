<?xml version="1.0"?>
<project name="dwr20" default="compile" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<!--=======================================================================-->
	<!-- File that contains local settings, you may need to edit this -->
	<property file="build.properties" />
	<!-- Version number information -->
	<property file="${source.java}/dwr-version.properties" />
	
	<!-- Properties for Maven Deploy, Stage, Release 
		 See: https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-7c.DeploySnapshotsandStageReleaseswithAnt
	-->
	<property name="src" location="${source.java}" />
	<property name="build" location="${target.class}" />
	<property name="dist" location="dist" />

	<!-- define Maven coordinates -->
	<property name="groupId" value="org.directwebremoting" />
	<property name="artifactId" value="dwr" />
	<property name="version" value="2.0.11-RELEASE" />

    <!-- define artifacts' name, which follows the convention of Maven -->
	<property name="dwr-maven-jar" value="${dist}/lib/${artifactId}-${version}.jar" />
	<property name="dwr-maven-javadoc-jar" value="${dist}/lib/${artifactId}-${version}-javadoc.jar" />
	<property name="dwr-maven-sources-jar" value="${dist}/lib/${artifactId}-${version}-sources.jar" />
	
    <!-- defined maven snapshots and staging repository id and url -->
	<property name="maven-repository-id" value="ossrh" />
	<property name="maven-snapshots-repository-url" value="https://oss.sonatype.org/content/repositories/snapshots/" />
	<property name="maven-staging-repository-url" value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />
	<!-- End Properties for Maven -->
	
	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${dist}/lib" />
	</target>
	
	<!--=======================================================================-->
	<target name="compile" description="Compile the sources">
		<echo message="If the build fails with a message about 'C:/Program Files/Java/jdk-1.3.1' then you probably need to edit build.properties." />
		<echo message="Building JDK1.3 files in ${source.java} using ${java.13.home} on ${os.name}" />
		<tstamp />
		<mkdir dir="${target.class}" />
		<javac debug="on" includes="**/*.java" destdir="${target.class}" fork="yes" source="1.3" target="1.3" includeantruntime="no" includejavaruntime="yes">
			<src path="${source.java}" />
			<src path="${source.demo}" />
			<bootclasspath>
				<fileset dir="${java.13.home}" includes="**/*.jar" />
			</bootclasspath>
			<classpath>
				<fileset dir="${source.jar}" includes="**/*.jar" />
				<!-- fileset dir="${source.lib}" includes="**/*.jar"/ -->
			</classpath>
		</javac>
		<echo message="Building JDK5 files in ${source.java5} using ${java.15.home} on ${os.name}" />
		<javac debug="on" includes="**/*.java" destdir="${target.class}" fork="yes" source="1.5" target="1.5" includeantruntime="no" includejavaruntime="yes">
			<src path="${source.java5}" />
			<bootclasspath>
				<fileset dir="${java.15.home}" includes="**/*.jar" />
			</bootclasspath>
			<classpath>
				<fileset dir="${source.jar}" includes="**/*.jar" />
				<!-- fileset dir="${source.lib}" includes="**/*.jar"/ -->
			</classpath>
		</javac>
		<copy todir="${target.class}">
			<fileset dir="${source.java}">
				<exclude name="**/*.java" />
				<exclude name="**/package.html" />
				<exclude name="**/package-info.java" />
			</fileset>
			<fileset dir="${source.java5}">
				<exclude name="**/*.java" />
				<exclude name="**/package.html" />
				<exclude name="**/package-info.java" />
			</fileset>
			<fileset dir="${source.etc}/classpath">
				<exclude name="**/log4j.properties" />
			</fileset>
		</copy>
	</target>

	<!--=======================================================================-->
	<target name="javadoc">
		<mkdir dir="${target.javadoc}" />
		<javadoc access="public" author="true" destdir="${target.javadoc}" doctitle="DWR Version ${version}" use="true" splitindex="true" version="true">
			<sourcepath path="${source.java}" />
			<sourcepath path="${source.java5}" />
			<classpath>
				<fileset dir="${source.jar}" includes="**/*.jar" />
				<!-- fileset dir="${source.lib}" includes="**/*.jar"/ -->
			</classpath>
			<package name="org.directwebremoting.*" />
			<package name="uk.ltd.getahead.dwr.*" />
			<footer>Copyright &#168; 2005</footer>
		</javadoc><property name="maven-snapshots-repository-id" value="sonatype-nexus-snapshots" />
	</target>

	<!--=======================================================================-->
	<target name="jar" depends="compile" description="Create output JAR file">
		<mkdir dir="${target.files}" />
		<jar destfile="${target.files}/dwr.jar" compress="true">
			<fileset dir="${target.class}">
				<exclude name="**/dwrdemo/**" />
			</fileset>
		</jar>
	</target>

	<!--=======================================================================-->
	<target name="war" depends="jar" description="Create output WAR file">
		<war destfile="${target.files}/dwr.war" webxml="${source.web}/WEB-INF/web.xml">
			<lib file="${target.files}/dwr.jar" />
			<classes dir="${target.class}">
				<include name="**/dwrdemo/**" />
			</classes>
			<classes dir="${source.demo}">
			</classes>
			<fileset dir="${source.web}">
				<exclude name="**/*.iml" />
				<exclude name="**/*.ipr" />
				<exclude name="**/*.iws" />
				<exclude name="WEB-INF/web.xml" />
				<exclude name="WEB-INF/classes/**" />
			</fileset>
		</war>
	</target>

	<!--=======================================================================-->
	<target name="files" depends="war, javadoc" description="Create output WAR and JAR files">
		<zip destfile="${target.files}/dwr-${version}-src.zip">
			<fileset dir="${source.root}">
				<exclude name="target/**" />
				<exclude name="**/*.iml" />
				<exclude name="**/*.ipr" />
				<exclude name="**/*.iws" />
			</fileset>
			<fileset dir="${target.files}">
				<include name="dwr.jar" />
				<include name="dwr.war" />
			</fileset>
			<!-- The DWR website extracts javadoc from here -->
			<zipfileset dir="${target.javadoc}" prefix="javadoc" />
		</zip>
	</target>

	<!--=======================================================================-->
	<target name="unpack" depends="war" description="Extracts the war file">
		<unwar src="${target.files}/dwr.war" dest="${target.war}" />
	</target>

	<!--=======================================================================-->
	<target name="clean">
		<delete dir="${target.class}" />
		<delete dir="${target.root}" />
		<delete defaultexcludes="false" verbose="true">
			<fileset dir="." includes="**/.DS_Store" />
		</delete>
	</target>

	<!-- Maven Deploy, Stage, Release, run this from the Bamboo CI machine 
		 See: https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-7c.DeploySnapshotsandStageReleaseswithAnt
	-->
	<target name="dist" depends="init, compile" description="generate the distribution">

		<!-- build the main artifact -->
		<jar jarfile="${dwr-maven-jar}">
		    <fileset dir="${build}" />
		</jar>

		<!-- build the javadoc artifact -->
		<javadoc sourcepath="${src}" destdir="${dist}/javadoc" />
		<jar jarfile="${dwr-maven-javadoc-jar}">
			<fileset dir="${dist}/javadoc" />
		</jar>

		<!-- build the sources artifact -->
		<jar jarfile="${dwr-maven-sources-jar}">
			<fileset dir="${src}" />
		</jar>
	</target>
		
	<target name="deploy" depends="dist" description="deploy snapshot version to Maven snapshot repository">		
		<artifact:mvn mavenHome="/srv/dwr/maven/apache-maven-3.2.1" fork="true">
			<arg value="org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy-file" />
			<arg value="-Durl=${maven-snapshots-repository-url}" />
			<arg value="-DrepositoryId=${maven-repository-id}" />
			<arg value="-Dfile=${dwr-maven-jar}" />
			<arg value="-Dpackaging=jar" />
			<arg value="-DpomFile=pom.xml" />			
			<arg value="-Djavadoc=${dwr-maven-javadoc-jar}" />
			<arg value="-Dsources=${dwr-maven-sources-jar}" />
		</artifact:mvn>
	</target>

	<!-- before this, update project version (both build.xml and pom.xml) from SNAPSHOT to RELEASE -->
	<target name="stage" depends="dist" description="deploy release version to Maven staging repository">
		<!-- sign and deploy the main artifact -->
		<artifact:mvn mavenHome="/srv/dwr/maven/apache-maven-3.2.1" fork="true">
			<arg value="org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy-file" />
			<arg value="-Durl=${maven-snapshots-repository-url}" />
			<arg value="-DrepositoryId=${maven-repository-id}" />
			<arg value="-Dfile=${dwr-maven-jar}" />
			<arg value="-Dpackaging=jar" />
			<arg value="-DpomFile=pom.xml" />			
			<arg value="-Djavadoc=${dwr-maven-javadoc-jar}" />
			<arg value="-Dsources=${dwr-maven-sources-jar}" />
			<arg value="-Pgpg" />
		</artifact:mvn>
	</target>

</project>
