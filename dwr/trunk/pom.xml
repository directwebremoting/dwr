<?xml version="1.0"?>
<!-- 
    Build:
    mvn clean install - generates the binary and source artifacts for all modules.    
    
    Site:
    mvn site:stage - This will aggregate the site info from each module and 
                     output the site to /target/site. Note using mvn site:site
                     does not work as the links between module sites will not work.
    mvn site:stage-deploy - You will need to add a server with the id of stagingSite to 
                            your settings.xml to deploy the site.  The server section 
                            requires your username/password for the dojo server our 
                            website is deployed to.
                            <server>
                              <id>stagingSite</id>
                              <username>yourusername</username>
                              <password>yourpassword</password>
                            </server>                     
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.directwebremoting</groupId>
  <artifactId>dwr</artifactId>
  <packaging>pom</packaging>
  <version>3.0.0-rc2-SNAPSHOT</version>
  <name>Direct Web Remoting</name>
  <url>http://directwebremoting.org/dwr/index.html</url>
  <!-- For the sonatype repo -->
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>6</version>
  </parent>
  <!-- Required so that Maven knows where to get the jms.jar http://maven.apache.org/guides/mini/guide-coping-with-sun-jars.html -->
  <repositories>  
    <repository>
      <id>repository.jboss.org-public</id>
      <name>JBoss repository</name>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
    </repository>
  </repositories>
  <developers>
    <developer>
      <name>David Marginian</name>
      <id>david_marginian</id>
    </developer>
    <developer>
      <name>Mike Wison</name>
      <id>mike_wilson</id>
    </developer>
  </developers>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <scm>
    <connection>scm:svn:http://svn.directwebremoting.org/dwr/trunk/</connection>
    <developerConnection>scm:svn:https://svn.directwebremoting.org/dwr/trunk/</developerConnection>
    <url>https://dwr.dev.java.net/source/browse/dwr/</url>
  </scm>
  <description>
	DWR is easy Ajax for Java. It makes it simple to call Java code directly from Javascript.
	It gets rid of almost all the boiler plate code between the web browser and your Java code.
  </description>
  <ciManagement>
    <system>Bamboo</system>
    <url>http://ci.directwebremoting.org/bamboo/</url>
  </ciManagement>  
  <issueManagement>
    <system>Jira</system>
    <url>http://directwebremoting.org/bugs/</url>
  </issueManagement>   
  <mailingLists>
    <mailingList>
      <name>Users Mailing List</name>
      <subscribe>sympa@dwr.java.net?subject=subscribe users</subscribe>
      <unsubscribe>sympa@dwr.java.net?subject=unsubscribe users</unsubscribe>
      <post>users@dwr.java.net</post>
      <archive>http://dwr.2114559.n2.nabble.com/DWR-Users-f2114559.html</archive>
    </mailingList>
    <mailingList>
      <name>Users Mailing List</name>
      <subscribe>sympa@dwr.java.net?subject=subscribe dev</subscribe>
      <unsubscribe>sympa@dwr.java.net?subject=unsubscribe dev</unsubscribe>
      <post>dev@dwr.java.net</post>
      <archive>http://dwr.2114559.n2.nabble.com/DWR-Users-f2114559.html</archive>
    </mailingList>
  </mailingLists>  
  <modules>
    <module>core</module>
    <module>demo</module>
    <module>noncla</module>
    <module>protocol/bayeux</module>
    <module>protocol/dwrp</module>
    <module>protocol/json</module>
    <module>serverside/guice</module>
    <module>serverside/hibernate</module>
    <module>serverside/hibernate2</module>
    <module>serverside/spring</module>
    <module>serverside/struts</module>
    <module>serverside/various</module>
    <module>serverside/webwork</module>
    <module>ui/dojo</module>
    <module>ui/dwr</module>
    <module>ui/gi</module>
    <module>ui/jaxer</module>
    <module>ui/scriptaculous</module>
  </modules>
  <!-- This section 'declares' all the libraries we're using in the project 
		with the corresponding version numbers. 'sub-projects' should not ever need 
		to specify a version only declare the dependency. -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>aopalliance</groupId>
        <artifactId>aopalliance</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>backport-util-concurrent</groupId>
        <artifactId>backport-util-concurrent</artifactId>
        <version>1.1_01</version>
      </dependency>
      <dependency>
        <groupId>bsf</groupId>
        <artifactId>bsf</artifactId>
        <version>2.3.0</version>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.1.1</version>
      </dependency>
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>1.2.1</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>1.4</version>
      </dependency>
      <dependency>
        <groupId>dom4j</groupId>
        <artifactId>dom4j</artifactId>
        <version>1.6.1</version>
      </dependency>
      <dependency>
        <groupId>jdom</groupId>
        <artifactId>jdom</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>javax.jms</groupId>
        <artifactId>jms</artifactId>
        <version>1.1</version>
      </dependency>      
      <dependency>
        <groupId>javax.el</groupId>
        <artifactId>el-api</artifactId>
        <version>2.2</version>
      </dependency>       
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jsp-api</artifactId>
        <version>2.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.5</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>1.6</version>
      </dependency>
      <dependency>
        <groupId>oro</groupId>
        <artifactId>oro</artifactId>
        <version>2.0.8</version>
      </dependency>
      <dependency>
        <groupId>opensymphony</groupId>
        <artifactId>webwork</artifactId>
        <version>2.2.2</version>
      </dependency>
	  <!-- 2.4.6 depends on rhino js.jar 1.6R7 and comes bundled with over-ridden Rhino classes, but Shrinksafe depends on 1.7R1 and does not work with 1.6R7.
	       TODO - Because of the above we have a dependency problem which results in the Shrinksafe test failing (we have exclude this test from running in the core pom. -->
      <dependency>
        <groupId>com.yahoo.platform.yui</groupId>
        <artifactId>yuicompressor</artifactId>		
        <version>2.4.6</version>
      </dependency>
	  <!-- Shrinksafe depends on rhino js.jar 1.7R1 and does not work on 1.6R7 -->
	  <dependency>
	    <groupId>org.dojotoolkit</groupId>
		<artifactId>shrinksafe</artifactId>
		<version>2.0</version>
	  </dependency>	  
	  <!-- For Shrinksafe, per the shrinksafe readme, shrinksafe is compatable with versions up to 1.7R1 but not beyond that due to rhino api changes. 
	       YUI Compressor depends on version 1.6R7 and doesn't work with 1.7R1, but for now we are only going to run the Shrinksafe Compressor test until 
		   we figure out a better way to handle this. -->
	  <dependency>
	    <groupId>rhino</groupId>
		<artifactId>js</artifactId>
		<version>1.6R7</version>
	  </dependency>    
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-continuation</artifactId>
        <scope>provided</scope>
        <version>7.0.1.v20091125</version>
      </dependency>
      <dependency>
        <groupId>xom</groupId>
        <artifactId>xom</artifactId>
        <version>1.1</version>
        <exclusions>
          <exclusion>
            <groupId>javax.xml</groupId>
            <artifactId>jsr173</artifactId>
          </exclusion>
          <exclusion>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
          </exclusion>
          <exclusion>
            <groupId>msv</groupId>
            <artifactId>xsdlib</artifactId>
          </exclusion>
          <exclusion>
            <groupId>msv</groupId>
            <artifactId>relaxngDatatype</artifactId>
          </exclusion>
          <exclusion>
            <groupId>pull-parser</groupId>
            <artifactId>pull-parser</artifactId>
          </exclusion>
          <exclusion>
            <groupId>xpp3</groupId>
            <artifactId>xpp3</artifactId>
          </exclusion>
          <exclusion>
            <groupId>stax</groupId>
            <artifactId>stax-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
          </exclusion>
          <exclusion>
            <groupId>junitperf</groupId>
            <artifactId>junitperf</artifactId>
          </exclusion>
          <exclusion>
            <groupId>stax</groupId>
            <artifactId>stax-ri</artifactId>
          </exclusion>
          <exclusion>
            <groupId>xalan</groupId>
            <artifactId>xalan</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>catalina</artifactId>
        <version>6.0.16</version>
      </dependency>
      <!-- Libraries we integrate with -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate</artifactId>
        <version>3.2.0.ga</version>
        <exclusions>
          <exclusion>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>hibernate</groupId>
        <artifactId>hibernate</artifactId>
        <version>2.1.7c</version>
        <exclusions>
          <exclusion>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.myfaces.core</groupId>
        <artifactId>myfaces-api</artifactId>
        <version>2.0.2</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>2.5.5</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>2.5.5</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>2.5.5</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>2.5.5</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
		<artifactId>spring-mock</artifactId>
		<version>2.0.6</version>
      </dependency>
      <dependency>
        <groupId>struts</groupId>
        <artifactId>struts</artifactId>
        <version>1.2.9</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.guice</groupId>
        <artifactId>guice</artifactId>
        <version>1.0</version>
      </dependency>
      <!-- Jetty -->
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>cometd-api</artifactId>
        <version>0.9.20080221</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>cometd-bayeux</artifactId>
        <version>7.0.1</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty</artifactId>
        <version>7.0.1</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-util</artifactId>
        <version>7.0.1</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlbeans</groupId>
        <artifactId>xmlbeans</artifactId>
        <version>2.2.0</version>
      </dependency>
      <!-- Testing dependencies -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.8</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymockclassextension</artifactId>
        <version>2.4</version>
        <scope>test</scope>
      </dependency>
      <!-- Demo Dependencies -->
      <dependency>
        <groupId>com.lowagie</groupId>
        <artifactId>itext</artifactId>
        <version>2.0.7</version>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.12</version>
      </dependency>      
    </dependencies>
  </dependencyManagement>  
  <build>
    <pluginManagement>
      <plugins>        
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>1.5</source>
            <target>1.5</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.1</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <preparationGoals>clean install</preparationGoals>
            <arguments>-Dmaven.test.skip=true</arguments>
            <goals>deploy</goals>
            <useReleaseProfile>false</useReleaseProfile>
            <remoteTagging/>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.5</version> 
        </plugin> 	
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>2.2</version>
        </plugin>        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.1.2</version>
          <configuration>
            <outputDirectory>${project.build.directory}</outputDirectory>
          </configuration>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>package</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.7.2</version>  
          <configuration>
            <reportsDirectory>${project.parent.build.directory}/junitReports</reportsDirectory>
		  </configuration>       
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>2.2</version>
        </plugin>       
      </plugins>
    </pluginManagement>
  </build>    
  <profiles>
    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>      
    </profile>
  </profiles>  
  <reporting>
    <plugins>
      <plugin>
         <groupId>org.apache.maven.plugins</groupId>         
         <artifactId>maven-javadoc-plugin</artifactId>
         <version>2.7</version>
      </plugin>
      <plugin>  
        <groupId>net.sf.dtddoc</groupId>
	    <artifactId>dtddoc-maven-plugin</artifactId> 
	    <version>1.1</version>
          <configuration>
            <docTitle>DWR DTD Docs</docTitle>            
            <showHiddenTags>false</showHiddenTags>
            <showFixmeTags>false</showFixmeTags>
            <sourceDirectory>${project.build.directory}</sourceDirectory>
            <outputDirectory>dtd</outputDirectory>
            <include name="**/*.dtd" />
            <excludes name="common/*.dtd" />
          </configuration>
	  </plugin>   
    </plugins>
  </reporting>  
  <distributionManagement>
    <downloadUrl>http://directwebremoting.org/dwr/mvn_site</downloadUrl>
    <site>
      <id>dwr.website</id>
      <name>DWR Website</name>
      <url>scp://directwebremoting.org/srv/www/vhosts/www.directwebremoting.org/dwr/mvn_site</url>
    </site>    
  </distributionManagement>  
</project>
